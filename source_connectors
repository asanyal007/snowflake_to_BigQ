
class db_connectors:
    def __init__(self, connector):
        self.connector = connector

    def snowflake_jdbc_read(self, options, dbtable, Schema, spark):
        df = spark.read.format("snowflake").options(**options).option("sfSchema",Schema).option("dbtable", dbtable).load()
        return df

    def bigquery_jdbc_read(self, spark, project, dataset, table ):
        df = spark.read.format('bigquery').option('table', '{}:{}.{}'.format(project, dataset,table)).load()
        return df

    def postgresql_jdbc_read(self, spark, dbtable, username, password):
        df = spark.read.format("jdbc").option("url", "jdbc:postgresql:dbserver").option("dbtable", dbtable).option("user", username).option("password", password).load()
        return df

    def mssql_jdbc_read(self,spark, url, table_name, username, password):
        df = spark.read \
            .format("com.microsoft.sqlserver.jdbc.spark") \
            .mode("overwrite") \
            .option("url", url) \
            .option("dbtable", table_name) \
            .option("user", username) \
            .option("password", password) \
            .load()

        return df
    # write
    def snowflake_jdbc_write(self, options, dbtable, Schema, spark, mode):
        df = spark.write.format("snowflake").options(**options).option("sfSchema",Schema).option("dbtable", dbtable).mode().save()
        return df

    def bigquery_jdbc_write(self, spark, project, dataset, table ):
        df = spark.read.format('bigquery').option('table', '{}:{}.{}'.format(project, dataset,table)).load()
        return df

    def postgresql_jdbc_write(self, spark, dbtable, username, password):
        df = spark.read.format("jdbc").option("url", "jdbc:postgresql:dbserver").option("dbtable", dbtable).option("user", username).option("password", password).load()
        return df

    def mssql_jdbc_write(self,spark, url, table_name, username, password):
        df = spark.read \
            .format("com.microsoft.sqlserver.jdbc.spark") \
            .mode("overwrite") \
            .option("url", url) \
            .option("dbtable", table_name) \
            .option("user", username) \
            .option("password", password) \
            .load()

        return df










